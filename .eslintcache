[{"D:\\CODE\\losdisco-front\\src\\index.js":"1","D:\\CODE\\losdisco-front\\src\\components.js":"2","D:\\CODE\\losdisco-front\\src\\reportWebVitals.js":"3","D:\\CODE\\losdisco-front\\src\\components\\AppRouter.js":"4","D:\\CODE\\losdisco-front\\src\\components\\FilterDetails.js":"5","D:\\CODE\\losdisco-front\\src\\components\\Filter.js":"6","D:\\CODE\\losdisco-front\\src\\screens.js":"7","D:\\CODE\\losdisco-front\\src\\library.js":"8","D:\\CODE\\losdisco-front\\src\\components\\filters\\ArtistFilter.js":"9","D:\\CODE\\losdisco-front\\src\\components\\filters\\AreaFilter.js":"10","D:\\CODE\\losdisco-front\\src\\components\\filters\\GenreFilter.js":"11","D:\\CODE\\losdisco-front\\src\\components\\filters\\AlbumFilter.js":"12","D:\\CODE\\losdisco-front\\src\\screens\\Add.js":"13","D:\\CODE\\losdisco-front\\src\\library\\BodyWrapper.js":"14","D:\\CODE\\losdisco-front\\src\\library\\Footer.js":"15","D:\\CODE\\losdisco-front\\src\\screens\\Areas.js":"16","D:\\CODE\\losdisco-front\\src\\library\\Header.js":"17","D:\\CODE\\losdisco-front\\src\\screens\\FourOhFour.js":"18","D:\\CODE\\losdisco-front\\src\\graphql\\queries.js":"19","D:\\CODE\\losdisco-front\\src\\screens\\Home.js":"20","D:\\CODE\\losdisco-front\\src\\graphql\\mutations.js":"21"},{"size":972,"mtime":1617303035388,"results":"22","hashOfConfig":"23"},{"size":207,"mtime":1617303035383,"results":"24","hashOfConfig":"23"},{"size":375,"mtime":1617303035391,"results":"25","hashOfConfig":"23"},{"size":1476,"mtime":1617303035384,"results":"26","hashOfConfig":"23"},{"size":1764,"mtime":1617303035384,"results":"27","hashOfConfig":"23"},{"size":1813,"mtime":1617303035384,"results":"28","hashOfConfig":"23"},{"size":214,"mtime":1617303035391,"results":"29","hashOfConfig":"23"},{"size":183,"mtime":1617303035388,"results":"30","hashOfConfig":"23"},{"size":374,"mtime":1617303035386,"results":"31","hashOfConfig":"23"},{"size":1810,"mtime":1617303035385,"results":"32","hashOfConfig":"23"},{"size":2247,"mtime":1617303035386,"results":"33","hashOfConfig":"23"},{"size":371,"mtime":1617303035385,"results":"34","hashOfConfig":"23"},{"size":14173,"mtime":1617303035391,"results":"35","hashOfConfig":"23"},{"size":301,"mtime":1617303035388,"results":"36","hashOfConfig":"23"},{"size":789,"mtime":1617303035390,"results":"37","hashOfConfig":"23"},{"size":13323,"mtime":1617481496577,"results":"38","hashOfConfig":"23"},{"size":1391,"mtime":1617303035390,"results":"39","hashOfConfig":"23"},{"size":728,"mtime":1617303035393,"results":"40","hashOfConfig":"23"},{"size":1873,"mtime":1617480151652,"results":"41","hashOfConfig":"23"},{"size":5880,"mtime":1617306759374,"results":"42","hashOfConfig":"23"},{"size":4913,"mtime":1617480509203,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1q6frbb",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\CODE\\losdisco-front\\src\\index.js",[],["93","94"],"D:\\CODE\\losdisco-front\\src\\components.js",[],"D:\\CODE\\losdisco-front\\src\\reportWebVitals.js",[],"D:\\CODE\\losdisco-front\\src\\components\\AppRouter.js",[],"D:\\CODE\\losdisco-front\\src\\components\\FilterDetails.js",["95"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport AlbumFilter from './filters/AlbumFilter'\r\nimport AreaFilter from './filters/AreaFilter'\r\nimport ArtistFilter from './filters/ArtistFilter'\r\nimport GenreFilter from './filters/GenreFilter'\r\n\r\nconst FilterDetails = ({ filterType }) => {\r\n    const [boxHeight, setBoxHeight] = useState(\"150px\")\r\n    const [filter, setFilter] = useState(<div></div>)\r\n    const lastType = useRef()\r\n\r\n    const dict = {\r\n        album: {\r\n            component: <AlbumFilter />,\r\n            height: \"80px\"\r\n        },\r\n        artist: {\r\n            component: <ArtistFilter />,\r\n            height: \"80px\"\r\n        },\r\n        area: {\r\n            component: <AreaFilter />,\r\n            height: \"230px\"\r\n        },\r\n        genre: {\r\n            component: <GenreFilter />,\r\n            height: \"230px\"\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!lastType.current){ \r\n            lastType.current = filterType \r\n            setBoxHeight(dict[filterType]?.height)\r\n            setFilter(dict[filterType]?.component)\r\n        }\r\n        else{\r\n            if(lastType !== filterType){\r\n                setBoxHeight(\"0px\")\r\n                setTimeout(() => {\r\n                    setBoxHeight(dict[filterType]?.height)\r\n                    lastType.current = filterType\r\n                    setFilter(dict[filterType]?.component)\r\n                }, 300)\r\n            }\r\n        }\r\n    }, [filterType])\r\n\r\n    return (\r\n        <Wrapper height={boxHeight}>\r\n            {filter}\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    transition: all 300ms;\r\n    height: ${({ height }) => height};\r\n    overflow: hidden;\r\n`\r\n\r\nexport default FilterDetails","D:\\CODE\\losdisco-front\\src\\components\\Filter.js",["96"],"import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n    FilterDetails\r\n} from '../components'\r\n\r\nconst Filter = () => {\r\n    const [selectedFilter, setSelectedFilter] = useState(\"artist\")\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Title>Filtrar por:</Title>\r\n            <FilterSelector>\r\n                <Btn selected={selectedFilter === \"artist\"} onClick={() => setSelectedFilter(\"artist\")}>Artista</Btn>\r\n                <Btn selected={selectedFilter === \"album\"} onClick={() => setSelectedFilter(\"album\")}>Álbum</Btn>\r\n                <Btn selected={selectedFilter === \"genre\"} onClick={() => setSelectedFilter(\"genre\")}>Género</Btn>\r\n                <Btn selected={selectedFilter === \"area\"} onClick={() => setSelectedFilter(\"area\")}>Área</Btn>\r\n            </FilterSelector>\r\n            <FilterDetails\r\n                filterType={selectedFilter}\r\n            />\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    margin-bottom: 1em;\r\n`\r\nconst Title = styled.div`\r\n    margin-bottom: 0.5em;\r\n`\r\nconst FilterSelector = styled.div`\r\n    display: flex;\r\n    margin-bottom: 1em;\r\n    & > div:not(last-child){\r\n        margin-right: 1em;\r\n    }\r\n`\r\n\r\nconst Btn = styled.div`\r\n    cursor: pointer;\r\n    min-height: 25px;\r\n    width: 100px;\r\n    padding: 10px;\r\n    border-radius: 3px;\r\n    border: 1px solid ${({ selected }) => selected ? \"rgba(150, 200, 255, 0.4)\" : \"gainsboro\"};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: all 300ms;\r\n    background-color: ${({ selected }) => selected ? \"rgba(150, 200, 255, 0.4)\" : \"white\"};\r\n    &:hover{\r\n        background-color: ${({ selected }) => selected ? \"rgba(150, 200, 255, 0.4)\" : \"rgba(0, 0, 0, 0.03)\"};\r\n    }\r\n`\r\n\r\nexport default Filter","D:\\CODE\\losdisco-front\\src\\screens.js",[],"D:\\CODE\\losdisco-front\\src\\library.js",[],"D:\\CODE\\losdisco-front\\src\\components\\filters\\ArtistFilter.js",[],"D:\\CODE\\losdisco-front\\src\\components\\filters\\AreaFilter.js",[],"D:\\CODE\\losdisco-front\\src\\components\\filters\\GenreFilter.js",[],"D:\\CODE\\losdisco-front\\src\\components\\filters\\AlbumFilter.js",[],"D:\\CODE\\losdisco-front\\src\\screens\\Add.js",["97","98","99","100"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport { CloseOutlined, SearchOutlined } from '@ant-design/icons'\r\nimport { Button, Spin, Table, Input, Tag, Descriptions, Carousel, message } from 'antd'\r\nimport styled from 'styled-components'\r\nimport BodyWrapper from '../library/BodyWrapper'\r\nimport Modal from 'antd/lib/modal/Modal'\r\nimport _ from 'lodash'\r\nimport { useMutation } from '@apollo/client'\r\nimport { CREATE_ALBUM } from '../graphql/mutations'\r\nimport { GET_ALBUMS } from '../graphql/queries'\r\n\r\nconst Add = () => {\r\n    const detailsOpen = useRef()\r\n    const carousel = useRef()\r\n    const [searchParam, setSearchParam] = useState(\"\")\r\n    const [results, setResults] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [page, setPage] = useState(1)\r\n    const [pageSize, setPageSize] = useState(10)\r\n    const [detailModal, setDetailModal] = useState({ show: false })\r\n    const [detailData, setDetailData] = useState()\r\n    const [loadingDetails, setLoadingDetails] = useState()\r\n    const [videoModal, setVideoModal] = useState({ show: false })\r\n    const [imageModal, setImageModal] = useState({ show: false })\r\n\r\n    const [createAlbum, { loading: loadingCreate }] = useMutation(CREATE_ALBUM, { refetchQueries: [{ query: GET_ALBUMS }] })\r\n\r\n    useEffect(() => {\r\n        if(searchParam){\r\n            searchIt()\r\n        }\r\n    }, [page, pageSize])\r\n\r\n    useEffect(() => {\r\n        console.log(results)\r\n    }, [results])\r\n\r\n    useEffect(() => {\r\n        if(detailModal?.show && (detailModal.show !== detailsOpen)){\r\n            detailsOpen.current = true\r\n            searchDetails(detailModal?.id)\r\n        }\r\n    }, [detailModal])\r\n\r\n    const searchIt = async () => {\r\n        setLoading(true)\r\n        const resp = await fetch(`https://api.discogs.com/database/search?q=${searchParam}&per_page=${pageSize}&page=${page}&type=release` , {\r\n            headers: { \"Authorization\": \"Discogs token=\" + process.env.REACT_APP_DISCOGS_TOKEN }\r\n        })\r\n        const data = await resp.json()\r\n        setResults(data)\r\n        setLoading(false)\r\n    }\r\n\r\n    const searchDetails = async id => {\r\n        setLoadingDetails(true)\r\n        const resp = await fetch(`https://api.discogs.com/releases/${id}` , {\r\n            headers: { \"Authorization\": \"Discogs token=\" + process.env.REACT_APP_DISCOGS_TOKEN }\r\n        })\r\n        const data = await resp.json()\r\n        console.log(data)\r\n        setDetailData(data)\r\n        setLoadingDetails(false)\r\n    }\r\n\r\n    const handleAdd = async item => {\r\n        console.log(item)\r\n        console.log({\r\n            artists: item.artists,\r\n            extraartists: item.extraartists\r\n        })\r\n        const resp = await createAlbum({ variables: {\r\n            title: item.title,\r\n            //zone,\r\n            artists_sort: item.artists_sort,\r\n            extraartists: item.extraartists,\r\n            full_artist_list: [...new Set([...item.artists, ...item.extraartists].map(it => it.name))],\r\n            album_format: _.upperFirst(item.formats.map(f => f.name === \"Vinyl\" ? \"Vinilo\" : f.name).find(f => [\"Vinilo\", \"CD\", \"Cassette\"].includes(f))),\r\n            genres: item.genres,\r\n            images: item.images,\r\n            labels: item.labels,\r\n            master_url: item.master_url,\r\n            notes: item.notes,\r\n            release: item.release,\r\n            resource_url: item.resource_url,\r\n            styles: item.styles,\r\n            thumb: item.thumb,\r\n            tracklist: item.tracklist,\r\n            uri: item.uri,\r\n            year: item.year\r\n        }})\r\n        if(resp){\r\n            message.success(\"El álbum se ha añadido correctamente a tu colección\")\r\n            setDetailModal({ show: false })\r\n        } else {\r\n            message.error(\"Algo pocho pasó\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <BodyWrapper>\r\n            <SearchBox>\r\n                <Label>Buscar artistas o álbumes</Label>\r\n                <Input style={{ width: 300, marginRight: \"1em\" }} value={searchParam} onChange={evt => setSearchParam(evt.target.value)} onPressEnter={() => searchIt()} />\r\n                <Button onClick={() => searchIt()} icon={<SearchOutlined />}>Buscar</Button>\r\n            </SearchBox>\r\n\r\n            <Table\r\n                loading={loading}\r\n                pagination={{\r\n                    defaultCurrent: 1,\r\n                    total: results?.pagination?.pages * results?.pagination?.per_page,\r\n                    onShowSizeChange: (page, size) => setPageSize(size),\r\n                    onChange: page => setPage(page)\r\n                }}\r\n                columns={[\r\n                    {\r\n                        key: \"thumbnail\",\r\n                        render: it => <Thumb src={it.thumb || process.env.REACT_APP_ALBUM_PLACEHOLDER} />\r\n                    },\r\n                    {\r\n                        title: 'Título',\r\n                        dataIndex: 'title',\r\n                        key: 'title',\r\n                    },\r\n                    {\r\n                        title: \"Año\",\r\n                        dataIndex: \"year\",\r\n                        key: \"year\",\r\n                        render: year => year || \"-\"\r\n                    },\r\n                    {\r\n                        title: \"Género\",\r\n                        key: \"genre\",\r\n                        render: it => (\r\n                            <TagWrapper>\r\n                                {( it.genre || []).map((gnr, i) => <Tag key={\"gnr\" + i}>{gnr}</Tag>)}\r\n                            </TagWrapper>\r\n                        )\r\n                    },\r\n                    {\r\n                        title: \"Formato\",\r\n                        key: \"format\",\r\n                        render: it => {\r\n                            const eng = _.get(it, \"format\", []).find(f => [\"Vinyl\", \"CD\", \"Cassette\"].includes(f))\r\n                            if(eng === \"Vinyl\"){ return \"Vinilo\" }\r\n                            else{ return eng}\r\n                        }\r\n                    },\r\n                    {\r\n                        title: \"Estilo\",\r\n                        key: \"style\",\r\n                        render: it => (\r\n                            <TagWrapper>\r\n                                {( it.style || []).map((style, i) => <Tag key={\"style\" + i}>{style}</Tag>)}\r\n                            </TagWrapper>\r\n                        )\r\n                    },\r\n                    {\r\n                        key: \"btn\",\r\n                        render: it => <Button onClick={() => {\r\n                            setDetailModal({ show: true, id: it.id })\r\n                        }}>Detalles</Button>\r\n                    }\r\n                ]}\r\n                rowKey=\"id\"\r\n                dataSource={results?.results || []}\r\n            />\r\n            <Modal\r\n                width=\"80%\"\r\n                visible={detailModal?.show}\r\n                onCancel={() => setDetailModal({ show: false })}\r\n                cancelText=\"Cerrar\"\r\n                okText=\"Añadir\"\r\n                onOk={() => handleAdd(detailData)}\r\n                confirmLoading={loadingCreate}\r\n            >\r\n                { loadingDetails ? <Spin /> : (\r\n                    <Descriptions\r\n                        labelStyle={{ fontWeight: \"bold \"}}\r\n                        bordered=\"true\"\r\n                        column={1}\r\n                        title={<div>\r\n                            <Thumb src={detailData?.thumb || process.env.REACT_APP_ALBUM_PLACEHOLDER} />\r\n                            <span style={{ marginLeft: \"1em\" }}>{ detailData?.title }</span>\r\n                        </div>}\r\n                    >\r\n                        <Descriptions.Item label=\"Lanzamiento\">{ detailData?.released }</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Artistas\">{ (detailData?.artists || []).reduce((acc, it) => acc + \", \" + it.name, \"\").slice(2) }</Descriptions.Item>\r\n                        {(detailData?.extraartists || []).length > 0 && (\r\n                            <Descriptions.Item label=\"Otros artistas\">{ detailData?.extraartists.reduce((acc, it) => acc + \", \" + it.name, \"\").slice(2) }</Descriptions.Item>\r\n                        )}\r\n                        <Descriptions.Item label=\"Lista de canciones\">\r\n                            <ul style={{ padding: 0 }}>\r\n                                { (detailData?.tracklist || []).map(track => <li style={{ listStyle: \"none\" }}>{track.position && (track.position + \" - \")}{ track?.title }</li>) }\r\n                            </ul>\r\n                        </Descriptions.Item>\r\n                        {(detailData?.videos || []).filter(v => v.embed).length > 0 && (\r\n                            <Descriptions.Item label=\"Vídeos\">\r\n                                <ul style={{ padding: 0 }}>\r\n                                    {(detailData?.videos || []).filter(v => v.embed).map((v, i) => (\r\n                                        <li \r\n                                            key={\"video-\" + i}\r\n                                            style={{ \r\n                                                listStyle: \"none\", \r\n                                                color: \"dodgerblue\", \r\n                                                cursor: \"pointer\" \r\n                                            }} \r\n                                            onClick={() => {\r\n                                                console.log(v.uri)\r\n                                                setVideoModal({ \r\n                                                    show: true, \r\n                                                    uri: (v.uri || \"\").replace(\"watch?v=\", \"embed/\"),\r\n                                                })\r\n                                            }}\r\n                                        >{v.title}</li>\r\n                                    ))}\r\n                                </ul>\r\n                            </Descriptions.Item>\r\n                        )}\r\n                        {(detailData?.images || []).length > 0 && (\r\n                            <Descriptions.Item label=\"Imágenes\"><Button onClick={() => setImageModal({ show: true, images: detailData?.images })}>Ver imágenes</Button></Descriptions.Item>\r\n                        )}\r\n                        {(detailData?.genre || []).length > 0 && (\r\n                            <Descriptions.Item label=\"Género\">{(detailData?.genres || []).map((gnr, i) => <Tag key={\"gnr-m-\" + i}>{gnr}</Tag>) }</Descriptions.Item>\r\n                        )}\r\n                        {(detailData?.styles || []).length > 0 && (\r\n                            <Descriptions.Item label=\"Estilo\">{(detailData?.styles || []).map((style, i) => <Tag key={\"style-m-\" + i}>{style}</Tag>) }</Descriptions.Item>\r\n                        )}\r\n                    </Descriptions>\r\n                )}\r\n            </Modal>\r\n            <Modal\r\n                visible={videoModal?.show}\r\n                onCancel={() => setVideoModal({ show: false })}\r\n                width=\"640px\"\r\n                bodyStyle={{ height: 360, padding: 0 }}\r\n                footer={null}\r\n                closeIcon={null}\r\n                destroyOnClose={true}\r\n            >\r\n                <VideoWrapper>\r\n                    <Close onClick={() => setVideoModal({ show: false })}>&times;</Close>\r\n                    <iframe \r\n                        id=\"ytplayer\" \r\n                        type=\"text/html\"\r\n                        width=\"640\" \r\n                        height=\"360\"\r\n                        src={ videoModal?.uri }\r\n                        frameborder=\"0\"\r\n                    />\r\n                </VideoWrapper>\r\n            </Modal>\r\n            <Modal\r\n                visible={imageModal?.show}\r\n                onCancel={() => setImageModal({ show: false })}\r\n                width=\"500px\"\r\n                bodyStyle={{ height: 490, padding: 0 }}\r\n                footer={null}\r\n                closeIcon={<span></span>}\r\n            >\r\n                <ImageWrapper>\r\n                    <Close onClick={() => setVideoModal({ show: false })}>&times;</Close>\r\n                    <Prev onClick={() => carousel.current.prev()}>&lt;</Prev>\r\n                    <Next onClick={() => carousel.current.prev()}>&gt;</Next>\r\n                    <Carousel\r\n                        ref={carousel}\r\n                    >\r\n                        {(imageModal?.images || []).map((img, i) => <img style={{\r\n                            maxHeight: 500,\r\n                            width: \"100%\",\r\n                            objectFit: \"contain\"\r\n                        }} src={img.uri} key={\"img-\" + i} /> )}\r\n                    </Carousel>\r\n                </ImageWrapper>\r\n            </Modal>\r\n        </BodyWrapper>\r\n    )\r\n}\r\n\r\nconst VideoWrapper = styled.div`\r\n    position: relative;\r\n`\r\nconst Prev = styled.div`\r\n    position: absolute;\r\n    width: 40px;\r\n    height: 100%;\r\n    line-height: 500px;\r\n    cursor: pointer;\r\n    top: 0px;\r\n    z-index: 10;\r\n    left: 0;\r\n    text-align: center;\r\n    color: gainsboro;\r\n    font-weight: bold;\r\n    font-size: 2em;\r\n`\r\nconst Next = styled.div`\r\n    position: absolute;\r\n    width: 40px;\r\n    height: 100%;\r\n    line-height: 500px;\r\n    cursor: pointer;\r\n    top: 0px;\r\n    z-index: 10;\r\n    right: 0;\r\n    text-align: center;\r\n    color: gainsboro;\r\n    font-weight: bold;\r\n    font-size: 2em;\r\n`\r\nconst ImageWrapper = styled.div`\r\n    background-color: black;\r\n    position: relative;\r\n    .slick-slider, .slick-list, .slick-track{\r\n        max-height: 500px;\r\n    }\r\n`\r\nconst Close = styled.div`\r\n    position: absolute;\r\n    color: white;\r\n    top: -40px;\r\n    right: -30px;\r\n    font-size: 2em;\r\n    cursor: pointer;\r\n`\r\n\r\nconst SearchBox = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 1em;\r\n`\r\nconst Label = styled.span`\r\n    margin-right: 1em;\r\n`\r\n\r\nconst Thumb = styled.img`\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 3px;\r\n    object-fit: cover;\r\n`\r\nconst TagWrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nexport default Add","D:\\CODE\\losdisco-front\\src\\library\\BodyWrapper.js",[],"D:\\CODE\\losdisco-front\\src\\library\\Footer.js",[],"D:\\CODE\\losdisco-front\\src\\screens\\Areas.js",["101"],"D:\\CODE\\losdisco-front\\src\\library\\Header.js",["102"],"import { Button, Menu, Dropdown } from 'antd'\r\nimport { PlusOutlined, MenuOutlined } from '@ant-design/icons'\r\nimport { withRouter } from 'react-router-dom'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Header = ({ history }) => {\r\n    const menu = (\r\n        <Menu>\r\n            <Menu.Item key=\"1\" onClick={() => history.push(\"/\")}>Lista de álbumes</Menu.Item>\r\n            <Menu.Item key=\"2\" onClick={() => history.push(\"/add\")}>Añadir álbum</Menu.Item>\r\n            <Menu.Item key=\"3\" onClick={() => history.push(\"/areas\")}>Gestionar áreas</Menu.Item>\r\n        </Menu>\r\n    )\r\n\r\n    return (\r\n        <Wrapper>\r\n            <h1 onClick={() => history.push(\"/\")}>Organizador de discos</h1>\r\n            {/* <Button onClick={() => history.push(\"/add\")} icon={<PlusOutlined style={{ marginTop: 4 }} />}>Añadir disco</Button> */}\r\n            <Dropdown overlay={menu}>\r\n                <Button icon={<MenuOutlined />}>Menú</Button>\r\n            </Dropdown>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 1em;\r\n    height: 70px;\r\n    background: white;\r\n    box-shadow: 0px 2px 10px 2px rgba(0, 0, 0, 0.1);\r\n    h1{\r\n        cursor: pointer;\r\n        margin: 0;\r\n        color: rgba(0, 0, 0, 0.8);\r\n    }\r\n`\r\n\r\nexport default withRouter(Header)","D:\\CODE\\losdisco-front\\src\\screens\\FourOhFour.js",["103"],"import React from 'react'\r\nimport { BodyWrapper } from '../library'\r\nimport styled from 'styled-components'\r\n\r\nconst FourOhFour = () => {\r\n    return (\r\n        <BodyWrapper>\r\n            <Wrapper>\r\n                <h1>404</h1>\r\n                <img src=\"404.gif\" />\r\n                <p>Lo que quiera que busques aquí no está</p>\r\n            </Wrapper>\r\n        </BodyWrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    h1{\r\n        font-size: 5em;\r\n    }\r\n    img{\r\n        border-radius: 4px;\r\n        box-shadow: 1px 1px 3px 1px rgba(0, 0, 0, 0.1);\r\n        margin-bottom: 1em;\r\n    }\r\n`\r\nexport default FourOhFour","D:\\CODE\\losdisco-front\\src\\graphql\\queries.js",[],"D:\\CODE\\losdisco-front\\src\\screens\\Home.js",["104","105","106"],"import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport {\r\n    BodyWrapper\r\n} from '../library'\r\nimport { \r\n    Filter\r\n} from '../components'\r\nimport {\r\n    Table,\r\n    Tag,\r\n    Popover,\r\n    Button,\r\n    Input,\r\n    message\r\n} from 'antd'\r\nimport { EditOutlined, DeleteOutlined, ZoomInOutlined } from '@ant-design/icons'\r\nimport { GET_ALBUMS } from '../graphql/queries'\r\nimport { UPDATE_ALBUM, DELETE_ALBUM } from '../graphql/mutations'\r\n\r\nconst Home = () => {\r\n    const [openPopover, setOpenPopover] = useState(false)\r\n    const { data, loading } = useQuery(GET_ALBUMS, { fetchPolicy: \"network-only\" })\r\n    const [updateAlbum, { loading: loadingUpdate }] = useMutation(UPDATE_ALBUM, { refetchQueries: [{ query: GET_ALBUMS }] })\r\n    const [deleteAlbum, { loading: loadingDelete }] = useMutation(DELETE_ALBUM, { refetchQueries: [{ query: GET_ALBUMS }] })\r\n\r\n    console.log(data)\r\n    return (\r\n        <BodyWrapper>\r\n            <Filter />\r\n            <Table \r\n                dataSource={data?.albums}\r\n                loading={loading}\r\n                rowKey=\"id\"\r\n                columns={[\r\n                    {\r\n                        key: \"thumb\",\r\n                        render: it => <Thumb src={it?.thumb} />\r\n                    },\r\n                    {\r\n                        title: \"Nombre\",\r\n                        dataIndex: \"title\",\r\n                        key: \"title\"\r\n                    },\r\n                    {\r\n                        title: \"Artista\",\r\n                        dataIndex: \"artists_sort\",\r\n                        key: \"artists_sort\"\r\n                    },\r\n                    {\r\n                        title: \"Género\",\r\n                        key: \"genre\",\r\n                        render: it => (\r\n                            <TagWrapper>\r\n                                {( it.genres || []).map((gnr, i) => <Tag key={\"gnr\" + i}>{gnr}</Tag>)}\r\n                            </TagWrapper>\r\n                        )\r\n                    },\r\n                    {\r\n                        title: \"Área\",\r\n                        key: \"zone\",\r\n                        render: it => it?.zone?.name ?? \"Sin ubicar\"\r\n                    },\r\n                    {\r\n                        key: \"btn\",\r\n                        render: item => {\r\n                            return (\r\n                                <div key={item.id} style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                                    <Tag \r\n                                        color=\"geekblue\" \r\n                                        style={{ cursor: \"pointer\" }}\r\n                                    ><EditOutlined /> Reubicar</Tag>\r\n                                    <Popover \r\n                                        trigger=\"click\" \r\n                                        visible={openPopover === \"delete\"+item.id}\r\n                                        onVisibleChange={bool => setOpenPopover(bool && \"delete\"+item.id)}\r\n                                        placement=\"left\" \r\n                                        content={\r\n                                            <div>\r\n                                                <p>¿Estás seguro de que deseas eliminar el álbum <b>{item.title}</b>?</p>\r\n                                                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                                    <Button type=\"default\" onClick={() => setOpenPopover(false)}>Cancelar</Button>&nbsp;&nbsp;\r\n                                                    <Button \r\n                                                        type=\"primary\" \r\n                                                        style={{ filter: \"hue-rotate(150deg)\" }}\r\n                                                        loading={loadingDelete}\r\n                                                        onClick={async () => {\r\n                                                            try{\r\n                                                                await deleteAlbum({ variables: { id: item.id }})\r\n                                                                message.success(\"Se ha borrado el álbum correctamente\")\r\n                                                            } catch(err) {\r\n                                                                message.error(\"Ocurrió un error durante el borrado del álbum\")\r\n                                                            }\r\n                                                            setOpenPopover(false)\r\n                                                        }}\r\n                                                    >Eliminar</Button>\r\n                                                </div>\r\n                                            </div>\r\n                                        }\r\n                                    >\r\n                                        <Tag color=\"volcano\" style={{ cursor: \"pointer\" }}><DeleteOutlined /> Eliminar</Tag>\r\n                                    </Popover>\r\n                                    <Tag color=\"success\"><ZoomInOutlined /> Ver detalles</Tag>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </BodyWrapper>\r\n    )\r\n}\r\n\r\nconst Thumb = styled.img`\r\n    width: 50px;\r\n    height: 50px;\r\n    min-height: 50px;\r\n    border-radius: 3px;\r\n    object-fit: cover;\r\n    transition: all 300ms;\r\n    &:hover{\r\n        position: relative;\r\n        z-index: 1000000;\r\n        transform: scale(5) translateX(15px);\r\n    }\r\n`\r\nconst TagWrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    height: 50px;\r\n`\r\n\r\nexport default Home","D:\\CODE\\losdisco-front\\src\\graphql\\mutations.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":48,"column":8,"nodeType":"113","endLine":48,"endColumn":20,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},{"ruleId":"115","severity":1,"message":"119","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":23},{"ruleId":"111","severity":1,"message":"120","line":32,"column":8,"nodeType":"113","endLine":32,"endColumn":24,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":244,"column":21,"nodeType":"124","endLine":251,"endColumn":23},{"ruleId":"125","severity":1,"message":"126","line":269,"column":69,"nodeType":"124","endLine":273,"endColumn":61},{"ruleId":"115","severity":1,"message":"127","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":33},{"ruleId":"115","severity":1,"message":"128","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":22},{"ruleId":"125","severity":1,"message":"126","line":10,"column":17,"nodeType":"124","endLine":10,"endColumn":38},{"ruleId":"115","severity":1,"message":"129","line":15,"column":5,"nodeType":"117","messageId":"118","endLine":15,"endColumn":10},{"ruleId":"115","severity":1,"message":"130","line":25,"column":12,"nodeType":"117","messageId":"118","endLine":25,"endColumn":23},{"ruleId":"115","severity":1,"message":"131","line":25,"column":36,"nodeType":"117","messageId":"118","endLine":25,"endColumn":49},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dict'. Either include it or remove the dependency array.","ArrayExpression",["134"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'CloseOutlined' is defined but never used.","React Hook useEffect has missing dependencies: 'searchIt' and 'searchParam'. Either include them or remove the dependency array.",["135"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useRef' is defined but never used.","'PlusOutlined' is defined but never used.","'Input' is defined but never used.","'updateAlbum' is assigned a value but never used.","'loadingUpdate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [dict, filterType]",{"range":"140","text":"141"},"Update the dependencies array to be: [page, pageSize, searchIt, searchParam]",{"range":"142","text":"143"},[1488,1500],"[dict, filterType]",[1390,1406],"[page, pageSize, searchIt, searchParam]"]